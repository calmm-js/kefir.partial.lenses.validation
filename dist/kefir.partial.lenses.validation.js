(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('partial.lenses.validation'), require('karet.lift')) :
	typeof define === 'function' && define.amd ? define(['exports', 'partial.lenses.validation', 'karet.lift'], factory) :
	(factory((global.Kefir = global.Kefir || {}, global.Kefir.partial = global.Kefir.partial || {}, global.Kefir.partial.lenses = global.Kefir.partial.lenses || {}, global.Kefir.partial.lenses.validation = {}),global.partial.lenses.validation,global.karet.lift));
}(this, (function (exports,V,K) { 'use strict';

	// THIS FILE IS GENERATED
	var acceptAs = /*#__PURE__*/K.lift(V.acceptAs);
	var acceptWith = /*#__PURE__*/K.lift(V.acceptWith);
	var accepts = /*#__PURE__*/K.lift(V.accepts);
	var acceptsAsync = /*#__PURE__*/K.lift(V.acceptsAsync);
	var and = /*#__PURE__*/K.lift(V.and);
	var args = /*#__PURE__*/K.lift(V.args);
	var arrayId = /*#__PURE__*/K.lift(V.arrayId);
	var arrayIx = /*#__PURE__*/K.lift(V.arrayIx);
	var both = /*#__PURE__*/K.lift(V.both);
	var cases = /*#__PURE__*/K.lift(V.cases);
	var casesOf = /*#__PURE__*/K.lift(V.casesOf);
	var choose = /*#__PURE__*/K.lift(V.choose);
	var dependentFn = /*#__PURE__*/K.lift(V.dependentFn);
	var either = /*#__PURE__*/K.lift(V.either);
	var errors = /*#__PURE__*/K.lift(V.errors);
	var errorsAsync = /*#__PURE__*/K.lift(V.errorsAsync);
	var freeFn = /*#__PURE__*/K.lift(V.freeFn);
	var ifElse = /*#__PURE__*/K.lift(V.ifElse);
	var keep = /*#__PURE__*/K.lift(V.keep);
	var lazy = /*#__PURE__*/K.lift(V.lazy);
	var modifyAfter = /*#__PURE__*/K.lift(V.modifyAfter);
	var modifyError = /*#__PURE__*/K.lift(V.modifyError);
	var not = /*#__PURE__*/K.lift(V.not);
	var optional = /*#__PURE__*/K.lift(V.optional);
	var or = /*#__PURE__*/K.lift(V.or);
	var promote = /*#__PURE__*/K.lift(V.promote);
	var props = /*#__PURE__*/K.lift(V.props);
	var propsOr = /*#__PURE__*/K.lift(V.propsOr);
	var rejectAs = /*#__PURE__*/K.lift(V.rejectAs);
	var rejectWith = /*#__PURE__*/K.lift(V.rejectWith);
	var removeAfter = /*#__PURE__*/K.lift(V.removeAfter);
	var run = /*#__PURE__*/K.lift(V.run);
	var setAfter = /*#__PURE__*/K.lift(V.setAfter);
	var setError = /*#__PURE__*/K.lift(V.setError);
	var tryValidateAsyncNow = /*#__PURE__*/K.lift(V.tryValidateAsyncNow);
	var tuple = /*#__PURE__*/K.lift(V.tuple);
	var upgrades = /*#__PURE__*/K.lift(V.upgrades);
	var upgradesOf = /*#__PURE__*/K.lift(V.upgradesOf);
	var validate = /*#__PURE__*/K.lift(V.validate);
	var validateAsync = /*#__PURE__*/K.lift(V.validateAsync);
	var where = /*#__PURE__*/K.lift(V.where);

	exports.accept = V.accept;
	exports.reject = V.reject;
	exports.remove = V.remove;
	exports.acceptAs = acceptAs;
	exports.acceptWith = acceptWith;
	exports.accepts = accepts;
	exports.acceptsAsync = acceptsAsync;
	exports.and = and;
	exports.args = args;
	exports.arrayId = arrayId;
	exports.arrayIx = arrayIx;
	exports.both = both;
	exports.cases = cases;
	exports.casesOf = casesOf;
	exports.choose = choose;
	exports.dependentFn = dependentFn;
	exports.either = either;
	exports.errors = errors;
	exports.errorsAsync = errorsAsync;
	exports.freeFn = freeFn;
	exports.ifElse = ifElse;
	exports.keep = keep;
	exports.lazy = lazy;
	exports.modifyAfter = modifyAfter;
	exports.modifyError = modifyError;
	exports.not = not;
	exports.optional = optional;
	exports.or = or;
	exports.promote = promote;
	exports.props = props;
	exports.propsOr = propsOr;
	exports.rejectAs = rejectAs;
	exports.rejectWith = rejectWith;
	exports.removeAfter = removeAfter;
	exports.run = run;
	exports.setAfter = setAfter;
	exports.setError = setError;
	exports.tryValidateAsyncNow = tryValidateAsyncNow;
	exports.tuple = tuple;
	exports.upgrades = upgrades;
	exports.upgradesOf = upgradesOf;
	exports.validate = validate;
	exports.validateAsync = validateAsync;
	exports.where = where;

	Object.defineProperty(exports, '__esModule', { value: true });

})));
